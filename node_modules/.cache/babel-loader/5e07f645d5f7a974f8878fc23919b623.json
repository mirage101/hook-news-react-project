{"ast":null,"code":"import _objectSpread from \"D:\\\\React\\\\PROEKTI\\\\hook_news\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"D:\\\\React\\\\PROEKTI\\\\hook_news\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\React\\\\PROEKTI\\\\hook_news\\\\src\\\\components\\\\Link\\\\LinkList.js\";\nimport React from \"react\";\nimport FirebaseContext from \"../../firebase/context\";\nimport LinkItem from \"./LinkItem\";\nimport { LINKS_PER_PAGE } from '../../utils/index';\n\nfunction LinkList(props) {\n  var _this = this;\n\n  var _React$useContext = React.useContext(FirebaseContext),\n      firebase = _React$useContext.firebase;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      links = _React$useState2[0],\n      setLinks = _React$useState2[1]; //cursor based pagination\n\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      cursor = _React$useState4[0],\n      setCursor = _React$useState4[1];\n\n  var isNewPage = props.location.pathname.includes(\"new\");\n  var isTopPage = props.location.pathname.includes(\"top\");\n  var page = Number(props.match.params.page);\n  React.useEffect(function () {\n    var unsubscribe = getLinks();\n    return function () {\n      return unsubscribe();\n    };\n  }, [isTopPage, page]);\n\n  function getLinks() {\n    var hasCursor = Boolean(cursor);\n\n    if (isTopPage) {\n      return firebase.db.collection(\"links\").orderBy(\"voteCount\", \"desc\").limit(LINKS_PER_PAGE).onSnapshot(handleSnapshot);\n    } else if (page === 1) {\n      return firebase.db.collection(\"links\").orderBy(\"created\", \"desc\") //.startAfter(1576674318026)\n      .startAt(1576674318026).limit(LINKS_PER_PAGE).onSnapshot(handleSnapshot);\n    } else if (hasCursor) {\n      return firebase.db.collection(\"links\").orderBy(\"created\", \"desc\").startAfter(cursor.created).limit(LINKS_PER_PAGE).onSnapshot(handleSnapshot);\n    }\n  }\n\n  function handleSnapshot(snapshot) {\n    var links = snapshot.docs.map(function (doc) {\n      return _objectSpread({\n        id: doc.id\n      }, doc.data());\n    });\n    var lastLink = links[links.length - 1];\n    setLinks(links);\n    setCursor(lastLink);\n  } //pagination functions\n\n\n  function visitPreviousPage() {\n    if (page > 1) {\n      props.history.push(\"/new/\".concat(page - 1));\n    }\n  }\n\n  function visitNextPage() {\n    if (page <= links.length / LINKS_PER_PAGE) {\n      props.history.push(\"/new/\".concat(page + 1));\n    }\n  }\n\n  var pageIndex = page ? (page - 1) * LINKS_PER_PAGE + 1 : 0;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, links.map(function (link, index) {\n    return /*#__PURE__*/React.createElement(LinkItem, {\n      key: link.id,\n      showCount: true,\n      link: link,\n      index: index + pageIndex,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    });\n  }), isNewPage && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pointer mr2\",\n    onClick: visitPreviousPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pointer\",\n    onClick: visitNextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Next\")));\n}\n\nexport default LinkList;","map":{"version":3,"sources":["D:/React/PROEKTI/hook_news/src/components/Link/LinkList.js"],"names":["React","FirebaseContext","LinkItem","LINKS_PER_PAGE","LinkList","props","useContext","firebase","useState","links","setLinks","cursor","setCursor","isNewPage","location","pathname","includes","isTopPage","page","Number","match","params","useEffect","unsubscribe","getLinks","hasCursor","Boolean","db","collection","orderBy","limit","onSnapshot","handleSnapshot","startAt","startAfter","created","snapshot","docs","map","doc","id","data","lastLink","length","visitPreviousPage","history","push","visitNextPage","pageIndex","link","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport FirebaseContext from \"../../firebase/context\";\nimport LinkItem from \"./LinkItem\";\nimport { LINKS_PER_PAGE } from '../../utils/index'\n\nfunction LinkList(props) {\n  const { firebase } = React.useContext(FirebaseContext);\n  const [links, setLinks] = React.useState([]);\n  //cursor based pagination\n  const [cursor, setCursor] = React.useState(null);\n  const isNewPage = props.location.pathname.includes(\"new\");\n  const isTopPage = props.location.pathname.includes(\"top\");\n  const page = Number(props.match.params.page);\n\n  React.useEffect(() => {\n    const unsubscribe = getLinks();\n    return () => unsubscribe();\n  }, [isTopPage, page]);\n\n  function getLinks() {\n    const hasCursor = Boolean(cursor)\n    if (isTopPage) {\n      return firebase.db\n        .collection(\"links\")\n        .orderBy(\"voteCount\", \"desc\")\n        .limit(LINKS_PER_PAGE)\n        .onSnapshot(handleSnapshot);\n    }else if( page === 1){\n      return firebase.db\n        .collection(\"links\")\n        .orderBy(\"created\", \"desc\")\n        //.startAfter(1576674318026)\n        .startAt(1576674318026)\n        .limit(LINKS_PER_PAGE)\n        .onSnapshot(handleSnapshot);\n    }else if(hasCursor){\n      return firebase.db\n        .collection(\"links\")\n        .orderBy(\"created\", \"desc\")\n        .startAfter(cursor.created)\n        .limit(LINKS_PER_PAGE)\n        .onSnapshot(handleSnapshot);\n    }\n  }\n\n  function handleSnapshot(snapshot) {\n    const links = snapshot.docs.map(doc => {\n      return { id: doc.id, ...doc.data() };\n    });\n    const lastLink = links[links.length - 1];\n    setLinks(links);\n    setCursor(lastLink);\n  }\n\n  //pagination functions\n  function visitPreviousPage(){\n    if(page > 1){\n      props.history.push(`/new/${page - 1}`)\n    }\n  }\n  function visitNextPage(){\n    if(page <= links.length  /LINKS_PER_PAGE){\n      props.history.push(`/new/${page + 1}`)\n    }\n  }\n\n  const pageIndex = page ? (page - 1) * LINKS_PER_PAGE + 1 : 0;\n  return (\n    <div>\n      {links.map((link, index) => (\n        <LinkItem\n          key={link.id}\n          showCount={true}\n          link={link}\n          index={index + pageIndex}\n        />\n      ))}\n      {isNewPage && (\n        <div className=\"pagination\">\n          <div className=\"pointer mr2\" onClick={visitPreviousPage}>Previous</div>\n          <div className=\"pointer\" onClick={visitNextPage}>Next</div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default LinkList;\n"]},"metadata":{},"sourceType":"module"}