{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\React\\\\PROEKTI\\\\hook_news\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\React\\\\PROEKTI\\\\hook_news\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\React\\\\PROEKTI\\\\hook_news\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\React\\\\PROEKTI\\\\hook_news\\\\src\\\\components\\\\Auth\\\\ForgotPassword.js\";\nimport React from \"react\";\nimport FirebaseContext from \"../../firebase/context\";\n\nfunction ForgotPassword() {\n  var _React$useContext = React.useContext(FirebaseContext),\n      firebase = _React$useContext.firebase;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      resetPasswordEmail = _React$useState2[0],\n      setResetPasswordEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isPasswordReset = _React$useState4[0],\n      setIsPasswordReset = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      passwordResetError = _React$useState6[0],\n      setPasswordResetError = _React$useState6[1];\n\n  function handleResetPassword() {\n    return _handleResetPassword.apply(this, arguments);\n  }\n\n  function _handleResetPassword() {\n    _handleResetPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return firebase.resetPassword(resetPasswordEmail);\n\n            case 3:\n              setIsPasswordReset(true);\n              setPasswordResetError(null);\n              _context.next = 12;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Error sending email\", _context.t0);\n              setPasswordResetError(_context.t0.message);\n              setIsPasswordReset(false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n    return _handleResetPassword.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"input\",\n    placeholder: \"Provide your account email\",\n    onChange: function onChange(event) {\n      return setResetPasswordEmail(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: handleResetPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Reset Password\")), isPasswordReset && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 27\n    }\n  }, \"Check email to reset password\"), passwordResetError && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 30\n    }\n  }, passwordResetError));\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["D:/React/PROEKTI/hook_news/src/components/Auth/ForgotPassword.js"],"names":["React","FirebaseContext","ForgotPassword","useContext","firebase","useState","resetPasswordEmail","setResetPasswordEmail","isPasswordReset","setIsPasswordReset","passwordResetError","setPasswordResetError","handleResetPassword","resetPassword","console","error","message","event","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;;AAEA,SAASC,cAAT,GAA0B;AAAA,0BACHF,KAAK,CAACG,UAAN,CAAiBF,eAAjB,CADG;AAAA,MAChBG,QADgB,qBAChBA,QADgB;;AAAA,wBAE4BJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAF5B;AAAA;AAAA,MAEjBC,kBAFiB;AAAA,MAEGC,qBAFH;;AAAA,yBAGsBP,KAAK,CAACK,QAAN,CAAe,KAAf,CAHtB;AAAA;AAAA,MAGjBG,eAHiB;AAAA,MAGAC,kBAHA;;AAAA,yBAI4BT,KAAK,CAACK,QAAN,CAAe,IAAf,CAJ5B;AAAA;AAAA,MAIjBK,kBAJiB;AAAA,MAIGC,qBAJH;;AAAA,WAMTC,mBANS;AAAA;AAAA;;AAAA;AAAA,oFAMxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEUR,QAAQ,CAACS,aAAT,CAAuBP,kBAAvB,CAFV;;AAAA;AAGIG,cAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAE,cAAAA,qBAAqB,CAAC,IAAD,CAArB;AAJJ;AAAA;;AAAA;AAAA;AAAA;AAMIG,cAAAA,OAAO,CAACC,KAAR,CAAc,qBAAd;AACAJ,cAAAA,qBAAqB,CAAC,YAAIK,OAAL,CAArB;AACAP,cAAAA,kBAAkB,CAAC,KAAD,CAAlB;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANwB;AAAA;AAAA;;AAkBxB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,WAAW,EAAC,4BAHd;AAIE,IAAA,QAAQ,EAAE,kBAAAQ,KAAK;AAAA,aAAIV,qBAAqB,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAzB;AAAA,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEP,mBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAPF,EAYGJ,eAAe,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAZtB,EAaGE,kBAAkB,iBAAI;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,kBAA3B,CAbzB,CADF;AAiBD;;AAED,eAAeR,cAAf","sourcesContent":["import React from \"react\";\nimport FirebaseContext from \"../../firebase/context\";\n\nfunction ForgotPassword() {\n  const { firebase } = React.useContext(FirebaseContext);\n  const [resetPasswordEmail, setResetPasswordEmail] = React.useState(\"\");\n  const [isPasswordReset, setIsPasswordReset] = React.useState(false);\n  const [passwordResetError, setPasswordResetError] = React.useState(null);\n\n  async function handleResetPassword() {\n    try {\n      await firebase.resetPassword(resetPasswordEmail);\n      setIsPasswordReset(true);\n      setPasswordResetError(null);\n    } catch (err) {\n      console.error(\"Error sending email\", err);\n      setPasswordResetError(err.message);\n      setIsPasswordReset(false);\n    }\n  }\n\n  return (\n    <div>\n      <input\n        type=\"email\"\n        className=\"input\"\n        placeholder=\"Provide your account email\"\n        onChange={event => setResetPasswordEmail(event.target.value)}\n      />\n      <div>\n        <button className=\"button\" onClick={handleResetPassword}>\n          Reset Password\n        </button>\n      </div>\n      {isPasswordReset && <p>Check email to reset password</p>}\n      {passwordResetError && <p className=\"error-text\">{passwordResetError}</p>}\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}