{"ast":null,"code":"import _toConsumableArray from \"D:\\\\React\\\\PROEKTI\\\\hook_news\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\React\\\\PROEKTI\\\\hook_news\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"D:\\\\React\\\\PROEKTI\\\\hook_news\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\React\\\\PROEKTI\\\\hook_news\\\\src\\\\components\\\\Link\\\\LinkDetail.js\";\nimport React from \"react\";\nimport FirebaseContext from \"../../firebase/context\";\nimport LinkItem from \"./LinkItem\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\n\nfunction LinkDetail(props) {\n  var _this = this;\n\n  var _React$useContext = React.useContext(FirebaseContext),\n      firebase = _React$useContext.firebase,\n      user = _React$useContext.user;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      link = _React$useState2[0],\n      setLink = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      commentText = _React$useState4[0],\n      setCommentText = _React$useState4[1];\n\n  var linkId = props.match.params.linkId;\n  var linkRef = firebase.db.collection(\"links\").doc(linkId);\n  React.useEffect(function () {\n    getLink();\n  }, []);\n\n  function getLink() {\n    linkRef.get().then(function (doc) {\n      setLink(_objectSpread({}, doc.data(), {\n        id: doc.id\n      }));\n    });\n  }\n\n  function handleAddComment() {\n    if (!user) {\n      props.history.push(\"/login\");\n    } else {\n      linkRef.get().then(function (doc) {\n        if (doc.exists) {\n          var previousComments = doc.data().comments;\n          var comment = {\n            postedBy: {\n              id: user.uid,\n              name: user.displayName\n            },\n            created: Date.now(),\n            text: commentText\n          };\n          var updatedComments = [].concat(_toConsumableArray(previousComments), [comment]);\n          linkRef.update({\n            comments: updatedComments\n          });\n          setLink(function (prevState) {\n            return _objectSpread({}, prevState, {\n              comments: updatedComments\n            });\n          });\n          setCommentText(\"\");\n        }\n      });\n    }\n  }\n\n  return !link ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LinkItem, {\n    showCount: false,\n    link: link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: function onChange(event) {\n      return setCommentText(event.target.value);\n    },\n    value: commentText,\n    rows: \"6\",\n    cols: \"60\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: handleAddComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Add Comment\")), link.comments.map(function (comment, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"comment-author\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, comment.postedBy.name, \" | \", distanceInWordsToNow(comment.created)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, comment.text));\n  }));\n}\n\nexport default LinkDetail;","map":{"version":3,"sources":["D:/React/PROEKTI/hook_news/src/components/Link/LinkDetail.js"],"names":["React","FirebaseContext","LinkItem","distanceInWordsToNow","LinkDetail","props","useContext","firebase","user","useState","link","setLink","commentText","setCommentText","linkId","match","params","linkRef","db","collection","doc","useEffect","getLink","get","then","data","id","handleAddComment","history","push","exists","previousComments","comments","comment","postedBy","uid","name","displayName","created","Date","now","text","updatedComments","update","prevState","event","target","value","map","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport FirebaseContext from \"../../firebase/context\";\nimport LinkItem from \"./LinkItem\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\n\nfunction LinkDetail(props) {\n  const { firebase, user } = React.useContext(FirebaseContext);\n  const [link, setLink] = React.useState(null);\n  const [commentText, setCommentText] = React.useState(\"\");\n  const linkId = props.match.params.linkId;\n  const linkRef = firebase.db.collection(\"links\").doc(linkId);\n\n  React.useEffect(() => {\n    getLink();\n  }, []);\n\n  function getLink() {\n    linkRef.get().then(doc => {\n      setLink({ ...doc.data(), id: doc.id });\n    });\n  }\n\n  function handleAddComment() {\n    if (!user) {\n      props.history.push(\"/login\");\n    } else {\n      linkRef.get().then(doc => {\n        if (doc.exists) {\n          const previousComments = doc.data().comments;\n          const comment = {\n            postedBy: { id: user.uid, name: user.displayName },\n            created: Date.now(),\n            text: commentText\n          };\n          const updatedComments = [...previousComments, comment];\n          linkRef.update({ comments: updatedComments });\n          setLink(prevState => ({\n            ...prevState,\n            comments: updatedComments\n          }));\n          setCommentText(\"\");\n        }\n      });\n    }\n  }\n\n  return !link ? (\n    <div>Loading...</div>\n  ) : (\n    <div>\n      <LinkItem showCount={false} link={link} />\n      <textarea\n        onChange={event => setCommentText(event.target.value)}\n        value={commentText}\n        rows=\"6\"\n        cols=\"60\"\n      />\n      <div>\n        <button className=\"button\" onClick={handleAddComment}>\n          Add Comment\n        </button>\n      </div>\n      {link.comments.map((comment, index) => (\n        <div key={index}>\n          <p className=\"comment-author\">\n            {comment.postedBy.name} | {distanceInWordsToNow(comment.created)}\n          </p>\n          <p>{comment.text}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default LinkDetail;\n"]},"metadata":{},"sourceType":"module"}