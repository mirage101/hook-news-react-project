{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\PROEKTI\\\\hook_news\\\\src\\\\components\\\\Link\\\\CreateLink.js\";\nimport React from \"react\";\nimport useFormValidation from \"../Auth/useFormValidation\";\nimport validateCreateLink from \"../Auth/validateCreateLink\";\nimport FirebaseContext from \"../../firebase/context\";\nvar INITIAL_STATE = {\n  description: \"\",\n  url: \"\"\n};\n\nfunction CreateLink(props) {\n  var _React$useContext = React.useContext(FirebaseContext),\n      firebase = _React$useContext.firebase,\n      user = _React$useContext.user;\n\n  var _useFormValidation = useFormValidation(INITIAL_STATE, validateCreateLink, handleCreateLink),\n      handleSubmit = _useFormValidation.handleSubmit,\n      handleChange = _useFormValidation.handleChange,\n      values = _useFormValidation.values,\n      errors = _useFormValidation.errors;\n\n  function handleCreateLink() {\n    if (!user) {\n      props.history.push(\"/login\");\n    } else {\n      var url = values.url,\n          description = values.description;\n      var newLink = {\n        url: url,\n        description: description,\n        postedBy: {\n          id: user.uid,\n          name: user.displayName\n        },\n        voteCount: 0,\n        votes: [],\n        comments: [],\n        created: Date.now()\n      };\n      firebase.db.collection(\"links\").add(newLink);\n      props.history.push(\"/\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"flex flex-column mt3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    value: values.description,\n    name: \"description\",\n    placeholder: \"A description for your link\",\n    autoComplete: \"off\",\n    type: \"text\",\n    className: errors.description && \"error-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), errors.description && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 30\n    }\n  }, errors.description), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    value: values.url,\n    name: \"url\",\n    placeholder: \"The URL for the link\",\n    autoComplete: \"off\",\n    type: \"url\",\n    className: errors.url && \"error-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), errors.url && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 22\n    }\n  }, errors.url), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n}\n\nexport default CreateLink;","map":{"version":3,"sources":["D:/React/PROEKTI/hook_news/src/components/Link/CreateLink.js"],"names":["React","useFormValidation","validateCreateLink","FirebaseContext","INITIAL_STATE","description","url","CreateLink","props","useContext","firebase","user","handleCreateLink","handleSubmit","handleChange","values","errors","history","push","newLink","postedBy","id","uid","name","displayName","voteCount","votes","comments","created","Date","now","db","collection","add"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport useFormValidation from \"../Auth/useFormValidation\";\nimport validateCreateLink from \"../Auth/validateCreateLink\";\nimport FirebaseContext from \"../../firebase/context\";\n\nconst INITIAL_STATE = {\n  description: \"\",\n  url: \"\"\n};\n\nfunction CreateLink(props) {\n  const { firebase, user } = React.useContext(FirebaseContext);\n  const { handleSubmit, handleChange, values, errors } = useFormValidation(\n    INITIAL_STATE,\n    validateCreateLink,\n    handleCreateLink\n  );\n\n  function handleCreateLink() {\n    if (!user) {\n      props.history.push(\"/login\");\n    } else {\n      const { url, description } = values;\n      const newLink = {\n        url,\n        description,\n        postedBy: {\n          id: user.uid,\n          name: user.displayName\n        },\n        voteCount: 0,\n        votes: [],\n        comments: [],\n        created: Date.now()\n      };\n      firebase.db.collection(\"links\").add(newLink);\n      props.history.push(\"/\");\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"flex flex-column mt3\">\n      <input\n        onChange={handleChange}\n        value={values.description}\n        name=\"description\"\n        placeholder=\"A description for your link\"\n        autoComplete=\"off\"\n        type=\"text\"\n        className={errors.description && \"error-input\"}\n      />\n      {errors.description && <p className=\"error-text\">{errors.description}</p>}\n      <input\n        onChange={handleChange}\n        value={values.url}\n        name=\"url\"\n        placeholder=\"The URL for the link\"\n        autoComplete=\"off\"\n        type=\"url\"\n        className={errors.url && \"error-input\"}\n      />\n      {errors.url && <p className=\"error-text\">{errors.url}</p>}\n      <button className=\"button\" type=\"submit\">\n        Submit\n      </button>\n    </form>\n  );\n}\n\nexport default CreateLink;\n"]},"metadata":{},"sourceType":"module"}